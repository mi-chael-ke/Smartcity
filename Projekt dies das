# packages
import numpy as np
import matplotlib as mpl
import matplotlib.pyplot as plt
import pandas as pd

data= pd.read_excel("Smart City lon lat-2.xlsx")

# data manipulation
data.point = data.apply(lambda row : row.point.replace(")","").replace("(","").split(",")[:2], axis=1)
coordinates = data.point.tolist()


X = [tmp[0] for tmp in coordinates]
Y = [tmp[1] for tmp in coordinates]

# Turn String list into Float list

XF=map(float, X)
x= list(XF)

YF=map(float, Y)
y= list(YF)

# drop columns
data = data.drop(columns = ["Unnamed: 0","City", "Address", "Postal Code", "location"])

# Grid Code

# Read excelfile and transform to list 

def read(path): 
    
    liste = pd.read_excel(path)
    new_list = []
    length = len(liste['Name'].tolist())

    for a in range(length):
        name = liste['Name'].tolist()[a]
        lon = liste['Longitude'].tolist()[a]
        lat = liste['Latitude'].tolist()[a]
        new_list.append([name,lon,lat])
    return new_list

# Search the elements that are in the grid

def grid(liste, longitude, latitude):
    
    output=[]

    for part in liste:
        if part[1] > longitude[0] and part[1] < longitude[1]:
            if part[2] > latitude[0] and part [2] < latitude[1]: 
                output.append(part)
    return output

liste = read("Text Lon Lat.xlsx")

#longitude 
X=600000
Y=700000

#latidude
A=5000000
B=6000000

grid = grid(liste, [X, Y], [A, B])
print(grid)


# Creating Code

import numpy as np
xgg = np.linspace(min(x), max(x), 10)
# numpy.linspace creates an array of

ygg = np.linspace(min(y), max(y), 10)
# meshgrid two 2-dimensional arrays 
x_1g, y_1g = np.meshgrid(xgg, ygg)
plt.plot(x_1g, y_1g, ".k")
plt.show()

for positionx, elementx in enumerate(xgg[:-1]):
    for positiony, elementy in enumerate(ygg[:-1]):
        print (f"{positionx}_{positiony}")
        print(positionx,elementx, positiony,elementy)
        var = grid(liste, [elementx, xgg[positionx + 1]], [elementy, ygg[positony + 1]])
        
